
# PSUEDO
End Point 1 | Triggered by Client
SESSIONS will send requests for new streams every X Secs
 1. payload => user_id, session_id, stream_id
   Query cache for session by user_id
   if user has active sessions:
     sessions < 3:
       Is it a new session or existing session
        if new session
            Allow service to issue the next phase of the stream
            if client has received the phases:
              add the new session to cache, details stream_id, user_id, last last_activity_date
        if existing session:
            Allow service to issue the next phase of the stream
            if client has received the phases:
              Update the last_activity_timestamp for that session in cache
    if user has no active session:
            Allow service to issue the next phase of the stream
            if client has received the phases:
              add the new session to cache, details stream_id, user_id, last last_activity_date

    Properties being:
        session_id
        user_id
        last_activity_date/time

End Point 2: (Triggered by a lambda function) - to Expire Inactive sessions:
    Fetch all sessions with last_activity_date_time <= n*X
        expire all of them (call back)

# ASG with ECS
# ACM for certificate Management
# ALB for load balancing &  TLS Termination
# WAF - Filtering Traffic


# Fix logger